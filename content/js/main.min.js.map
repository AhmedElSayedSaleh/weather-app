{"version":3,"sources":["jquery.libraries.call.js","main.js"],"names":["$","owlCarousel","_defineProperty","_$$owlCarousel","loop","nav","dots","0","items","600","1000","toggleTemp","tempBtn","document","querySelectorAll","forEach","btn","addEventListener","classListNaNpxove","firstElementChild","innerHTML","classList","add","getDate","Date","toLocaleDateString","weekday","month","day","year","setDate","querySelector","url","getData","_callee","data","_regeneratorRuntime","wrap","_context","prev","next","fetch","response","sent","json","abrupt","t0","console","log","stop","then","currently","daily","hourly","temperature","summary","icon","dailyData","hourlyData","concat","Math","round","src","map","hour","time","temperatureHigh","temperatureLow"],"mappings":"ghOACAA,EAAA,iBAAAC,aAAAC,gBAAAC,eAAA,CACAC,MAAA,EACAC,KAAA,EACAC,MAAA,GAHA,QAIA,GAJAJ,gBAAAC,eAAA,aAKA,CACAI,EAAA,CACAC,MAAA,GAEAC,IAAA,CACAD,MAAA,GAEAE,IAAA,CACAF,MAAA,KAbAL,iBCAA,IAAAQ,WAAA,WACA,IAAAC,EAAAC,SAAAC,iBAAA,oBAEAF,EAAAG,QAAA,SAAAC,GACAA,EAAAC,iBAAA,QAAA,WACAL,EAAAG,QAAA,SAAAC,GACAA,EAAAE,kBAAA,iCACAF,EAAAE,kBAAA,kCAEA,MAAAF,EAAAG,kBAAAC,UACAJ,EAAAK,UAAAC,IAAA,gCAEAN,EAAAK,UAAAC,IAAA,sCAeAC,SAHAZ,aAGA,WAOA,OANA,IAAAa,MAAAC,mBAAA,QAAA,CACAC,QAAA,OACAC,MAAA,QACAC,IAAA,UACAC,KAAA,cAKAC,QAAA,WACAjB,SAAAkB,cAAA,SACAX,UAAAG,WAKAS,KAHAF,UAIA,yF,SAEAG,U,uHAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAC,sBAAAC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEAC,MAAAT,KAFA,KAAA,EAAA,OAEAU,EAFAJ,EAAAK,KAAAL,EAAAE,KAAA,EAGAE,EAAAE,OAHA,KAAA,EAAA,OAGAT,EAHAG,EAAAK,KAAAL,EAAAO,OAAA,SASAV,GATA,KAAA,GAAAG,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAWAS,QAAAC,IAAAV,EAAAQ,IAXA,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAW,SAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,U,sBAwBAD,UAAAiB,KAAA,SAAAf,GACAY,QAAAC,IAAAb,GACA,IAAAgB,EAAAhB,EAAAgB,UAAAC,EAAAjB,EAAAiB,MAAAC,EAAAlB,EAAAkB,OACAC,EAAAH,EAAAG,YAAAC,EAAAJ,EAAAI,QAAAC,EAAAL,EAAAK,KACAC,EAAAL,EAAAjB,KACAuB,EAAAL,EAAAlB,KAEAtB,SAAAkB,cAAA,SACAX,UAAA,GAAAuC,OAAAC,KAAAC,MACAP,GADA,kDAIAzC,SAAAkB,cAAA,SACA+B,IAAA,4CAAAH,OAAAH,EAAA,QAEA3C,SAAAkB,cAAA,YACAX,UAAAmC,EAEA1C,SAAAkB,cAAA,mBACAX,UAAAiC,EAAAE,QAEA1C,SAAAkB,cAAA,WACAX,UAAAsC,EAAAK,IAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,KAAAT,EAAAQ,EAAAR,KAAAF,EAAAU,EAAAV,YACA,MAAA,yEAAAK,OAEAM,EAFA,iDAAAN,OAGAH,EAHA,iDAAAG,OAIAC,KAAAC,MAAAP,GAJA,oCASAzC,SAAAkB,cAAA,UACAX,UAAAqC,EAAAM,IAAA,SAAAnC,GACA,IAAAqC,EAAArC,EAAAqC,KAAAT,EAAA5B,EAAA4B,KAAAU,EAAAtC,EAAAsC,gBAAAC,EAAAvC,EAAAuC,eACA,MAAA,uEAAAR,OAEAM,EAFA,gDAAAN,OAGAH,EAHA,gDAAAG,OAIAC,KAAAC,MAAAK,GAJA,sDAAAP,OAKAC,KAAAC,MAAAM,GALA","file":"main.min.js","sourcesContent":["// ################# forecasts times & dates scroll ###################\n$(\".owl-carousel\").owlCarousel({\n  loop: true,\n  nav: false,\n  dots: true,\n  loop: false,\n  responsive: {\n    0: {\n      items: 2,\n    },\n    600: {\n      items: 6,\n    },\n    1000: {\n      items: 9,\n    },\n  },\n});\n","// Celsius/Fahrenheit buttons toggle\nconst toggleTemp = () => {\n  const tempBtn = document.querySelectorAll(\".temperature-btn\");\n\n  tempBtn.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n      tempBtn.forEach((btn) => {\n        btn.classListNaNpxove(\"temperature-btn--right-active\");\n        btn.classListNaNpxove(\"temperature-btn--left-active\");\n      });\n      if (btn.firstElementChild.innerHTML === \"C\") {\n        btn.classList.add(\"temperature-btn--left-active\");\n      } else {\n        btn.classList.add(\"temperature-btn--right-active\");\n      }\n    });\n    // if (tempBtnText.innerHTML === \"C\") {\n    //   tempBtnText.innerHTML = \"F\";\n    //   // temp.innerHTML = `${Math.round(temp.innerHTML * 9 / 5 + 32)}&deg;F`;\n    // } else {\n    //   tempBtnText.innerHTML = \"C\";\n    //   // temp.innerHTML = `${Math.round((temp.innerHTML - 32) * 5 / 9)}&deg;C`;\n    // }\n  });\n};\ntoggleTemp();\n\n// get current date\nconst getDate = () => {\n  const date = new Date().toLocaleDateString(\"en-US\", {\n    weekday: \"long\",\n    month: \"short\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n  return date;\n};\n// display date in html\nconst setDate = () => {\n  const date = document.querySelector(\"#date\");\n  date.innerHTML = getDate();\n};\nsetDate();\n\n// Get weather from api\nconst url =\n  \"https://api.darksky.net/forecast/a177f8481c31fa96c3f95ad4f4f84610/30.007414,31.491318\";\n\nasync function getData() {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    // const {\n    //   currently: { temperature, summary, icon },\n    //   hourly: { data: hourlyData },\n    //   daily: { data: dailyData },\n    // } = data;\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// display weather in html\n// const htmlDisplay = (data) => {\n// const {\n//   currently: { temperature, summary, icon },\n//   daily: { data: dailyData },\n//   hourly: { data: hourlyData },\n// } = data;\n// };\n\ngetData().then((data) => {\n  console.log(data);\n  const { currently, daily, hourly } = data;\n  const { temperature, summary, icon } = currently;\n  const { data: dailyData } = daily;\n  const { data: hourlyData } = hourly;\n\n  const temp = document.querySelector(\"#temp\");\n  temp.innerHTML = `${Math.round(\n    temperature\n  )}<span class=\"temperature-degree\">&#176;</span>`;\n\n  const iconImg = document.querySelector(\"#icon\");\n  iconImg.src = `https://darksky.net/images/weather-icons/${icon}.png`;\n\n  const summaryEl = document.querySelector(\"#summary\");\n  summaryEl.innerHTML = summary;\n\n  const hourlySummary = document.querySelector(\"#hourly-summary\");\n  hourlySummary.innerHTML = hourly.summary;\n\n  const hourlyEl = document.querySelector(\"#hourly\");\n  hourlyEl.innerHTML = hourlyData.map((hour) => {\n    const { time, icon, temperature } = hour;\n    return `\n    <div class=\"hourly-item\">\n      <div class=\"hourly-item__time\">${time}</div>\n      <div class=\"hourly-item__icon\">${icon}</div>\n      <div class=\"hourly-item__temp\">${Math.round(temperature)}&deg;C</div>\n    </div>\n    `;\n  });\n\n  const dailyEl = document.querySelector(\"#daily\");\n  dailyEl.innerHTML = dailyData.map((day) => {\n    const { time, icon, temperatureHigh, temperatureLow } = day;\n    return `\n    <div class=\"daily-item\">\n      <div class=\"daily-item__time\">${time}</div>\n      <div class=\"daily-item__icon\">${icon}</div>\n      <div class=\"daily-item__temp\">${Math.round(temperatureHigh)}&deg;C</div>\n      <div class=\"daily-item__temp\">${Math.round(temperatureLow)}&deg;C</div>\n    </div>\n    `;\n  });\n});\n\n// const { temperature, summary, icon } = data.hourly;\n// const temp = document.querySelector(\"#temp\");\n// temp.innerHTML = `${Math.round(temperature)}&deg;`;\n\n// const weather = document.querySelector(\"#weather\");\n// weather.innerHTML = summary;\n\n// const iconImg = document.querySelector(\"#icon\");\n// iconImg.src = `https://darksky.net/images/weather-icons/${icon}.png`;\n\n// Set DOM elements from the API\n// temperatureDegree.textContent = temperature;\n// temperatureDescription.textContent = summary;\n// locationTimezone.textContent = data.timezone;\n// // Set icon\n// setIcons(icon, document.querySelector(\".icon\"));\n// // Change temperature to Celsius/Fahrenheit\n// temperatureSection.addEventListener(\"click\", () => {\n//   if (temperatureSpan.textContent === \"F\") {\n//     temperatureSpan.textContent = \"C\";\n//     temperatureDegree.textContent = Math.floor((temperature - 32) * (5 / 9));\n//   } else {\n//     temperatureSpan.textContent = \"F\";\n//     temperatureDegree.textContent = temperature;\n//   }\n// });\n// });\n"]}