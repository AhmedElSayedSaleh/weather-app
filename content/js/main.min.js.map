{"version":3,"sources":["jquery.libraries.call.js","main.js"],"names":["$","owlCarousel","_defineProperty","_$$owlCarousel","loop","nav","dots","0","items","600","1000","toggleTemp","tempBtn","document","querySelectorAll","forEach","btn","addEventListener","classListNaNpxove","firstElementChild","innerHTML","classList","add","url","getData","_callee","data","_regeneratorRuntime","wrap","_context","prev","next","fetch","response","sent","json","abrupt","t0","console","log","stop","getDate","date","Date","toLocaleDateString","weekday","month","day","year","setDate","querySelector","then","_data$currently","currently","temperature","summary","icon"],"mappings":"ghOACAA,EAAA,iBAAAC,aAAAC,gBAAAC,eAAA,CACAC,MAAA,EACAC,KAAA,EACAC,MAAA,GAHA,QAIA,GAJAJ,gBAAAC,eAAA,aAKA,CACAI,EAAA,CACAC,MAAA,GAEAC,IAAA,CACAD,MAAA,GAEAE,IAAA,CACAF,MAAA,KAbAL,iBCAA,IAAAQ,WAAA,WACA,IAAAC,EAAAC,SAAAC,iBAAA,oBAEAF,EAAAG,QAAA,SAAAC,GACAA,EAAAC,iBAAA,QAAA,WACAL,EAAAG,QAAA,SAAAC,GACAA,EAAAE,kBAAA,iCACAF,EAAAE,kBAAA,kCAEA,MAAAF,EAAAG,kBAAAC,UACAJ,EAAAK,UAAAC,IAAA,gCAEAN,EAAAK,UAAAC,IAAA,sCAeAC,KAHAZ,aAIA,yF,SAEAa,U,uHAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAC,sBAAAC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEAC,MAAAT,KAFA,KAAA,EAAA,OAEAU,EAFAJ,EAAAK,KAAAL,EAAAE,KAAA,EAGAE,EAAAE,OAHA,KAAA,EAAA,OAGAT,EAHAG,EAAAK,KAAAL,EAAAO,OAAA,SASAV,GATA,KAAA,GAAAG,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAaAS,QAAAC,IAAAV,EAAAQ,IAbA,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAW,SAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,U,sBAkBA,IAAAgB,QAAA,WACA,IAAAC,GAAA,IAAAC,MAAAC,mBAAA,QAAA,CACAC,QAAA,OACAC,MAAA,QACAC,IAAA,UACAC,KAAA,YAGA,OADAV,QAAAC,IAAAG,GACAA,GAGAO,QAAA,WACApC,SAAAqC,cAAA,SACA9B,UAAAqB,WAEAQ,UAUAzB,UAAA2B,KAAA,SAAAzB,GAEA0B,EAAA1B,EAAA2B,UAAAD,EAAAE,YAAAF,EAAAG,QAAAH,EAAAI","file":"main.min.js","sourcesContent":["// ################# forecasts times & dates scroll ###################\n$(\".owl-carousel\").owlCarousel({\n  loop: true,\n  nav: false,\n  dots: true,\n  loop: false,\n  responsive: {\n    0: {\n      items: 2,\n    },\n    600: {\n      items: 6,\n    },\n    1000: {\n      items: 9,\n    },\n  },\n});\n","// Celsius/Fahrenheit buttons toggle\nconst toggleTemp = () => {\n  const tempBtn = document.querySelectorAll(\".temperature-btn\");\n\n  tempBtn.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n      tempBtn.forEach((btn) => {\n        btn.classListNaNpxove(\"temperature-btn--right-active\");\n        btn.classListNaNpxove(\"temperature-btn--left-active\");\n      });\n      if (btn.firstElementChild.innerHTML === \"C\") {\n        btn.classList.add(\"temperature-btn--left-active\");\n      } else {\n        btn.classList.add(\"temperature-btn--right-active\");\n      }\n    });\n    // if (tempBtnText.innerHTML === \"C\") {\n    //   tempBtnText.innerHTML = \"F\";\n    //   // temp.innerHTML = `${Math.round(temp.innerHTML * 9 / 5 + 32)}&deg;F`;\n    // } else {\n    //   tempBtnText.innerHTML = \"C\";\n    //   // temp.innerHTML = `${Math.round((temp.innerHTML - 32) * 5 / 9)}&deg;C`;\n    // }\n  });\n}; // end of toggleTemp\ntoggleTemp();\n\n// Get data from api\nconst url =\n  \"https://api.darksky.net/forecast/a177f8481c31fa96c3f95ad4f4f84610/30.007414,31.491318\";\n\nasync function getData() {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    // const {\n    //   currently: { temperature, summary, icon },\n    //   hourly: { data: hourlyData },\n    //   daily: { data: dailyData },\n    // } = data;\n    return data;\n    // console.log(data);\n    // return data;\n  } catch (err) {\n    console.log(err);\n  }\n} // end of getData\n\n// get current date\nconst getDate = () => {\n  const date = new Date().toLocaleDateString(\"en-US\", {\n    weekday: \"long\",\n    month: \"short\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n  console.log(date);\n  return date;\n};\n// set date in html\nconst setDate = () => {\n  const date = document.querySelector(\"#date\");\n  date.innerHTML = getDate();\n};\nsetDate();\n// set data html\n// const htmlDisplay = (data) => {\n// const {\n//   currently: { temperature, summary, icon },\n//   daily: { data: dailyData },\n//   hourly: { data: hourlyData },\n// } = data;\n// };\n\ngetData().then((data) => {\n  // console.log(data);\n  const { temperature, summary, icon } = data.currently;\n  // Set DOM elements from the API\n  // temperatureDegree.textContent = temperature;\n  // temperatureDescription.textContent = summary;\n  // locationTimezone.textContent = data.timezone;\n  // // Set icon\n  // setIcons(icon, document.querySelector(\".icon\"));\n  // // Change temperature to Celsius/Fahrenheit\n  // temperatureSection.addEventListener(\"click\", () => {\n  //   if (temperatureSpan.textContent === \"F\") {\n  //     temperatureSpan.textContent = \"C\";\n  //     temperatureDegree.textContent = Math.floor((temperature - 32) * (5 / 9));\n  //   } else {\n  //     temperatureSpan.textContent = \"F\";\n  //     temperatureDegree.textContent = temperature;\n  //   }\n  // });\n});\n"]}